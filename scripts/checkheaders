#!/bin/bash

# Copyright (c) 2016-2017, Intel Corporation.

# This script makes sure that all the header files in src/ can be included
# without any missing dependencies.

cd $ZJS_BASE/src

SRCDIR=/tmp/zjs_checkheaders

# prepare directory
rm -rf $SRCDIR
mkdir $SRCDIR

TEMPLATE=$SRCDIR/zjs_template.c

echo                 > $TEMPLATE
echo "int main() {" >> $TEMPLATE
echo "return 0;"    >> $TEMPLATE
echo "}"            >> $TEMPLATE

SOURCE=$SRCDIR/zjs_source.c
BINARY=$SRCDIR/zjs_source

# create a stub generated dts board, i2c and ipm headers to work around errors
touch $SRCDIR/generated_dts_board.h
mkdir $SRCDIR/syscalls/
touch $SRCDIR/syscalls/i2c.h
touch $SRCDIR/syscalls/ipm.h
touch $SRCDIR/syscalls/sensor.h

PASSCOUNT=0
TOTAL=0

CFLAGS="-m32 -DCONFIG_X86 -DCONFIG_PREEMPT_ENABLED -DCONFIG_LOAPIC_BASE_ADDRESS=0xFEE00000 -DCONFIG_NET_RAW_MODE -DCONFIG_NET_BUF_USER_DATA_SIZE=4 -I. -I$SRCDIR -I../deps/jerryscript/jerry-core -I../deps/jerryscript/jerry-core/include -I../deps/jerryscript/jerry-ext/include -I../deps/zephyr/include -I../deps/zephyr/arch/x86/include -I../deps/iotivity-constrained/include -I../deps/iotivity-constrained -include../deps/iotivity-constrained/port/zephyr/src/config.h -I../deps/zephyr/subsys/testsuite/ztest/include"

FAILURES=

function create_source()  # HEADER
{
    # write source file with include for given header file
    echo "#include \"$1\"" > $SOURCE
    cat $TEMPLATE >> $SOURCE
}

# collect list of files with failures on first pass
for i in *.h; do
    create_source $i
    gcc $CFLAGS $SOURCE -o $BINARY > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        PASSCOUNT=$(($PASSCOUNT + 1))
    else
        FAILURES="$FAILURES $i"
    fi
    TOTAL=$(($TOTAL + 1))
done

if [ -n "$FAILURES" ]; then
    echo Failures detected in $FAILURES
    echo Use checkheaders -v to see details
fi

if [ "$1" == "-v" ] && [ $PASSCOUNT -ne $TOTAL ]; then
    # print failure output on second pass
    for i in $FAILURES; do
        STR="Failures in $i"
        LEN=$((${#STR} + 2))
        printf "%${LEN}s\n" | tr ' ' '='
        echo " $STR"
        printf "%${LEN}s\n" | tr ' ' '='
        create_source $i
        gcc $CFLAGS $SOURCE -o $BINARY
    done
fi

echo RESULTS: $PASSCOUNT/$TOTAL passed

if [ $PASSCOUNT -ne $TOTAL ]; then
    # on Ubuntu ensure libc6-dev-i386
    if which dpkg > /dev/null; then
        if ! dpkg -l libc6-dev-i386 > /dev/null 2>&1; then
            echo
            echo WARNING: package libc6-dev-i386 not found
            echo You may need to run: sudo apt install libc6-dev-i386
        fi
    fi

    exit 1
fi

exit 0
